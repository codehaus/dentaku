<configuration>

  <load-on-start>
    <component>
       <role>org.codehaus.plexus.velocity.VelocityComponent</role>
    </component>
    <component>
       <role>com.moveitair.provider.DocumentProvider</role>
       <role-hint>email</role-hint>
    </component>
  </load-on-start>

  <resources>
    <!-- jar-repository>${plexus.home}/lib</jar-repository -->
  </resources>

  <configurations-directory>${plexus.home}/conf</configurations-directory>
  
  <components>
    <component>
      <role>Test</role>
      <implementation>TestComponent</implementation>
    </component>
    <component>
      <role>org.codehaus.plexus.summit.pipeline.Pipeline</role>
      <implementation>org.codehaus.plexus.summit.pipeline.SummitPipeline</implementation>
      <lifecycle-handler>plexus-configurable</lifecycle-handler>
      <configuration>
        <name>Default Pipeline</name>
        <valves>
          <valve>org.codehaus.plexus.summit.pipeline.valve.CreateViewContextValve</valve>
          <valve>org.codehaus.plexus.summit.pull.PullToolValve</valve>
          <valve>org.codehaus.plexus.security.summit.SecureActionValve</valve>
          <valve>org.codehaus.plexus.security.summit.SessionValidatorValve</valve>
          <valve>org.codehaus.plexus.summit.pipeline.valve.DetermineTargetValve</valve>
          <!-- valve>org.codehaus.plexus.security.summit.ResourceControllerValve</valve -->
          <valve>org.codehaus.plexus.summit.pipeline.valve.ResolverValve</valve>
          <valve>org.codehaus.plexus.summit.pipeline.valve.DisplayValve</valve>
          <valve>org.codehaus.plexus.summit.pull.PullToolReleaseValve</valve>
          <valve>com.moveitair.web.summit.CloseHibernateSessionValve</valve>
        </valves>
      </configuration>
    </component>
    
    <component>
      <role>org.codehaus.plexus.summit.pipeline.valve.Valve</role>
      <role-hint>org.codehaus.plexus.summit.pipeline.valve.ResolverValve</role-hint>
      <implementation>org.codehaus.plexus.summit.pipeline.valve.ResolverValve</implementation>
      <configuration>
        <resolver>classic</resolver>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.summit.pipeline.valve.Valve</role>
      <role-hint>org.codehaus.plexus.summit.pipeline.valve.DisplayValve</role-hint>
      <implementation>org.codehaus.plexus.summit.pipeline.valve.DisplayValve</implementation>
      <configuration>
        <display>classic</display>
      </configuration>
    </component>
    
    <component>
      <role>org.codehaus.plexus.summit.pipeline.valve.Valve</role>
      <role-hint>org.codehaus.plexus.summit.pipeline.valve.DetermineTargetValve</role-hint>
      <implementation>org.codehaus.plexus.summit.pipeline.valve.DetermineTargetValve</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.summit.resolver.Resolver</role>
          <role-hint>classic</role-hint>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.codehaus.plexus.summit.pipeline.valve.Valve</role>
      <role-hint>org.codehaus.plexus.security.summit.SecureActionValve</role-hint>
      <implementation>org.codehaus.plexus.security.summit.SecureActionValve</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.action.ActionManager</role>
          <field-name>actionManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.ResourceController</role>
          <role-hint>org.codehaus.plexus.action.Action</role-hint>
        </requirement>
      </requirements>
    </component>
                
	<component>
	  <role>org.codehaus.plexus.summit.pull.PullService</role>
	  <implementation>org.codehaus.plexus.summit.pull.DefaultPullService</implementation>
      <lifecycle-handler>plexus</lifecycle-handler>
      <configuration>
	    <tools>
          <tool>
            <name>link</name>
            <role>linktool</role>
            <scope>request</scope>
          </tool>
           <tool>
            <name>page</name>
            <role>pagetool</role>
            <scope>request</scope>
          </tool>
           <tool>
            <name>util</name>
            <role>utiltool</role>
            <scope>request</scope>
          </tool>
           <tool>
            <name>nav</name>
            <role>navtool</role>
            <scope>request</scope>
          </tool>
          <tool>
            <name>mia</name>
            <role>miatool</role>
            <scope>request</scope>
          </tool>
          <tool>
            <name>renderer</name>
            <role>org.codehaus.plexus.summit.pull.tools.TemplateRenderer</role>
            <scope>request</scope>
          </tool>
          <tool>
            <name>i18n</name>
            <role>org.codehaus.plexus.i18n.I18N</role>
            <scope>global</scope>
          </tool>
          <tool>
            <name>formman</name>
            <role>org.codehaus.plexus.formica.FormManager</role>
            <scope>global</scope>
          </tool>
        </tools>
      </configuration>
    </component>
    
    <component>
      <role>linktool</role>
      <implementation>org.codehaus.plexus.summit.pull.tools.TemplateLink</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
      <lifecycle-handler>plexus</lifecycle-handler>
      <configuration/>
    </component>
    
    <component>
      <role>pagetool</role>
      <implementation>org.codehaus.plexus.summit.pull.tools.TemplatePageAttributes</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
      <lifecycle-handler>plexus</lifecycle-handler>
      <configuration/>
    </component>
    
    <component>
      <role>miatool</role>
      <implementation>com.moveitair.web.tool.MIATool</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
      <configuration/>
      <requirements>
        <requirement>
          <role>com.moveitair.service.UserManager</role>
        </requirement>
        <requirement>
          <role>com.moveitair.service.ClientManager</role>
        </requirement>
        <requirement>
          <role>com.moveitair.service.DocumentManager</role>
        </requirement>
        <requirement>
          <role>com.moveitair.service.CompanyManager</role>
        </requirement>
      </requirements>
    </component>    
    
    <component>
      <role>utiltool</role>
      <implementation>com.moveitair.web.tool.UtilityTool</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
      <configuration/>
    </component>
     
    <component>
      <role>navtool</role>
      <implementation>com.moveitair.web.tool.NavigationTool</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
      <configuration/>
    </component>    

    <component>
      <role>org.codehaus.plexus.summit.rundata.RunData</role>
      <instantiation-strategy>per-lookup</instantiation-strategy>
      <implementation>org.codehaus.plexus.security.summit.SecureRunData</implementation>
      <lifecycle-handler>plexus</lifecycle-handler>
      <configuration/>
    </component>
   
    <component>
      <role>org.codehaus.plexus.velocity.VelocityComponent</role>
      <implementation>org.codehaus.plexus.velocity.DefaultVelocityComponent</implementation>
      <lifecycle-handler>plexus</lifecycle-handler>
      <configuration>
        <properties>
          <property>
            <name>resource.loader</name>
            <value>file</value>
          </property>
          <property>
            <name>userdirective</name>
            <value>com.moveitthere.delivery.util.velocity.ExecuteDirective</value>
          </property>
          <property>
            <name>file.resource.loader.class</name>
            <value>org.apache.velocity.runtime.resource.loader.FileResourceLoader</value>
          </property>
          <property>
            <name>file.resource.loader.path</name>
            <value>${plexus.home}/../templates/</value>
          </property>
          <property>
            <name>file.resource.loader.cache</name>
            <value>false</value>
          </property>
          <property>
            <name>velocimacro.permissions.allow.inline</name>
            <value>true</value>
          </property>
           <property>
            <name>velocimacro.permissions.allow.inline.to.replace.global</name>
            <value>false</value>
          </property>
           <property>
            <name>velocimacro.library.autoreload</name>
            <value>velocimacro.library.autoreload</value>
          </property>
           <property>
            <name>runtime.log.logsystem.class</name>
            <value>org.codehaus.plexus.velocity.CommonsLoggingSystem</value>
          </property>
           <property>
            <name>runtime.log.logsystem.log4j.category</name>
            <value>org.apache.velocity</value>
          </property>
        </properties>
      </configuration>
     </component>
     
    <component>
      <role>org.codehaus.plexus.formica.FormManager</role>
      <implementation>org.codehaus.plexus.formica.DefaultFormManager</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.formica.validation.manager.ValidatorManager</role>
        </requirement>
        <requirement>
          <field-name>groupValidatorMap</field-name>
          <role>org.codehaus.plexus.formica.validation.group.GroupValidator</role>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.formica.population.Populator</role>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.i18n.I18N</role>
        </requirement>
      </requirements>
      <configuration>
        <forms>
          <directory-configuration-resource source="${plexus.home}/../forms"/>
        </forms>
      </configuration>
    </component>
  </components>

</configuration>
