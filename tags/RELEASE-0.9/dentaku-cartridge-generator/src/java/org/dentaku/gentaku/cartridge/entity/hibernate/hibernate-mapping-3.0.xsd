<?xml version="1.0" encoding="UTF-8"?>
<!--
  Hibernate Mapping DTD.
  
  <!DOCTYPE hibernate-mapping PUBLIC 
      "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
      "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
  
  An instance of this XML document may contain mappings for an arbitrary 
  number of classes. The class mappings may contain associations to classes
  mapped in the same document or in another document. No class may be 
  mapped more than once. Each document may also contain definitions of an
  arbitrary number of queries, and import declarations of arbitrary classes. 
  
-->
<!-- The document root. -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="hibernate-mapping">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="typedef"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="import"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="class"/>
          <xs:element ref="subclass"/>
          <xs:element ref="joined-subclass"/>
        </xs:choice>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="query"/>
          <xs:element ref="sql-query"/>
        </xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="filter-def"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.hibernate-mapping"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.hibernate-mapping">
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="default-cascade" default="none"/>
    <xs:attribute name="default-access" default="property"/>
    <xs:attribute name="default-lazy" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="auto-import" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="package"/>
  </xs:attributeGroup>
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!--
    META element definition; used to assign meta-level attributes to a class
    or property.  Is currently used by codegenerator as a placeholder for
    values that is not directly related to OR mappings.
  -->
  <xs:element name="meta">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.meta"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.meta">
    <xs:attribute name="attribute" use="required"/>
    <xs:attribute name="inherit" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!--
    TYPEDEF element definition; defines a new name for a Hibernate type. May
    contain parameters for parameterizable types.
  -->
  <xs:element name="typedef">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="param"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.typedef"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.typedef">
    <xs:attribute name="class" use="required"/>
    <xs:attribute name="name" use="required"/>
  </xs:attributeGroup>
  <!-- IMPORT element definition; an explicit query language "import" -->
  <xs:element name="import">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.import"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.import">
    <xs:attribute name="class" use="required"/>
    <xs:attribute name="rename"/>
  </xs:attributeGroup>
  <!-- default: unqualified class name -->
  <!--
    Root entity mapping.  Poorly named as entities do not have to be represented by 
    classes at all.  Mapped entities may be represented via different methodologies 
    (POJO, Map, Dom4j).
  -->
  <xs:element name="class">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element minOccurs="0" ref="cache"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:choice>
          <xs:element ref="id"/>
          <xs:element ref="composite-id"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="discriminator"/>
        <xs:choice minOccurs="0">
          <xs:element ref="version"/>
          <xs:element ref="timestamp"/>
        </xs:choice>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="property"/>
          <xs:element ref="many-to-one"/>
          <xs:element ref="one-to-one"/>
          <xs:element ref="component"/>
          <xs:element ref="dynamic-component"/>
          <xs:element ref="properties"/>
          <xs:element ref="any"/>
          <xs:element ref="map"/>
          <xs:element ref="set"/>
          <xs:element ref="list"/>
          <xs:element ref="bag"/>
          <xs:element ref="idbag"/>
          <xs:element ref="array"/>
          <xs:element ref="primitive-array"/>
          <xs:element ref="query-list"/>
        </xs:choice>
        <xs:choice>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" ref="join"/>
            <xs:element minOccurs="0" maxOccurs="unbounded" ref="subclass"/>
          </xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="joined-subclass"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="union-subclass"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="filter"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.class"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.class">
    <xs:attribute name="entity-name"/>
    <xs:attribute name="name"/>
    <xs:attribute name="proxy"/>
    <xs:attribute name="lazy">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="table"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="discriminator-value"/>
    <xs:attribute name="mutable" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="abstract" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="polymorphism" default="implicit">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="implicit"/>
          <xs:enumeration value="explicit"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="where"/>
    <xs:attribute name="persister"/>
    <xs:attribute name="dynamic-update" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="dynamic-insert" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="select-before-update" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="optimistic-lock" default="version">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="none"/>
          <xs:enumeration value="version"/>
          <xs:enumeration value="dirty"/>
          <xs:enumeration value="all"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="check"/>
    <xs:attribute name="rowid"/>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <!-- this is the class name -->
  <!-- default: no proxy interface -->
  <!-- default: unqualified classname -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: unqualified class name | none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- FILTER-DEF element; top-level filter definition. -->
  <xs:element name="filter-def">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="filter-param"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.filter-def"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.filter-def">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="condition"/>
  </xs:attributeGroup>
  <!-- The filter name -->
  <!--
    FILTER-PARAM element; qualifies parameters found within a FILTER-DEF
    condition.
  -->
  <xs:element name="filter-param">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.filter-param"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.filter-param">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="type" use="required"/>
  </xs:attributeGroup>
  <!-- The parameter name -->
  <!-- The parameter type -->
  <!-- FILTER element; used to apply a filter. -->
  <xs:element name="filter">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.filter"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.filter">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="condition"/>
  </xs:attributeGroup>
  <!-- A join allows some properties of a class to be persisted to a second table -->
  <xs:element name="join">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element ref="key"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="property"/>
          <xs:element ref="many-to-one"/>
          <xs:element ref="component"/>
          <xs:element ref="dynamic-component"/>
          <xs:element ref="any"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.join"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.join">
    <xs:attribute name="table" use="required"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="fetch" default="join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="inverse" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="optional" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- default: none -->
  <!-- default: none -->
  <!--
    Declares the id type, column and generation algorithm for an entity class.
    If a name attribut is given, the id is exposed to the application through the 
    named property of the class. If not, the id is only exposed to the application 
    via Session.getIdentifier()
  -->
  <xs:element name="id">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="column"/>
        <xs:element minOccurs="0" ref="generator"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.id"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.id">
    <xs:attribute name="name"/>
    <xs:attribute name="node"/>
    <xs:attribute name="access"/>
    <xs:attribute name="column"/>
    <xs:attribute name="type"/>
    <xs:attribute name="length"/>
    <xs:attribute name="unsaved-value"/>
  </xs:attributeGroup>
  <!-- any|none|null|undefined|0|-1|... -->
  <!--
    A composite key may be modelled by a java class with a property for each 
    key column. The class must implement java.io.Serializable and reimplement equals() 
    and hashCode().
  -->
  <xs:element name="composite-id">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="key-property"/>
          <xs:element ref="key-many-to-one"/>
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.composite-id"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.composite-id">
    <xs:attribute name="class"/>
    <xs:attribute name="name"/>
    <xs:attribute name="node"/>
    <xs:attribute name="access"/>
    <xs:attribute name="unsaved-value" default="undefined">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="undefined"/>
          <xs:enumeration value="any"/>
          <xs:enumeration value="none"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!--
    Polymorphic data requires a column holding a class discriminator value. This
    value is not directly exposed to the application.
  -->
  <xs:element name="discriminator">
    <xs:complexType>
      <xs:choice minOccurs="0">
        <xs:element ref="column"/>
        <xs:element ref="formula"/>
      </xs:choice>
      <xs:attributeGroup ref="attlist.discriminator"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.discriminator">
    <xs:attribute name="column"/>
    <xs:attribute name="formula"/>
    <xs:attribute name="type" default="string"/>
    <xs:attribute name="not-null" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="length"/>
    <xs:attribute name="force" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="insert" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- default: "class"|none -->
  <!--
    Versioned data requires a column holding a version number. This is exposed to the
    application through a property of the Java class.
  -->
  <xs:element name="version">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.version"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.version">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="node"/>
    <xs:attribute name="access"/>
    <xs:attribute name="column"/>
    <xs:attribute name="type" default="integer"/>
    <xs:attribute name="unsaved-value" default="undefined">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="null"/>
          <xs:enumeration value="negative"/>
          <xs:enumeration value="undefined"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="timestamp">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.timestamp"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.timestamp">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="node"/>
    <xs:attribute name="column"/>
    <xs:attribute name="access"/>
    <xs:attribute name="unsaved-value" default="null">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="null"/>
          <xs:enumeration value="undefined"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!--
    Subclass declarations are nested beneath the root class declaration to achieve
    polymorphic persistence with the table-per-hierarchy mapping strategy.
    
    See the note on the class element regarding <pojo/> vs. @name usage...
  -->
  <xs:element name="subclass">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="property"/>
          <xs:element ref="many-to-one"/>
          <xs:element ref="one-to-one"/>
          <xs:element ref="component"/>
          <xs:element ref="dynamic-component"/>
          <xs:element ref="any"/>
          <xs:element ref="map"/>
          <xs:element ref="set"/>
          <xs:element ref="list"/>
          <xs:element ref="bag"/>
          <xs:element ref="idbag"/>
          <xs:element ref="array"/>
          <xs:element ref="primitive-array"/>
          <xs:element ref="query-list"/>
        </xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="join"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="subclass"/>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.subclass"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.subclass">
    <xs:attribute name="entity-name"/>
    <xs:attribute name="name"/>
    <xs:attribute name="proxy"/>
    <xs:attribute name="discriminator-value"/>
    <xs:attribute name="dynamic-update" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="dynamic-insert" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="select-before-update" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="extends"/>
    <xs:attribute name="lazy">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="abstract" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="persister"/>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <!-- default: no proxy interface -->
  <!-- default: unqualified class name | none -->
  <!-- default: empty when a toplevel, otherwise the nearest class definition -->
  <!--
    Joined subclasses are used for the normalized table-per-subclass mapping strategy
    
    See the note on the class element regarding <pojo/> vs. @name usage...
  -->
  <xs:element name="joined-subclass">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:element ref="key"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="property"/>
          <xs:element ref="many-to-one"/>
          <xs:element ref="one-to-one"/>
          <xs:element ref="component"/>
          <xs:element ref="dynamic-component"/>
          <xs:element ref="any"/>
          <xs:element ref="map"/>
          <xs:element ref="set"/>
          <xs:element ref="list"/>
          <xs:element ref="bag"/>
          <xs:element ref="idbag"/>
          <xs:element ref="array"/>
          <xs:element ref="primitive-array"/>
          <xs:element ref="query-list"/>
        </xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="joined-subclass"/>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.joined-subclass"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.joined-subclass">
    <xs:attribute name="entity-name"/>
    <xs:attribute name="name"/>
    <xs:attribute name="proxy"/>
    <xs:attribute name="table"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="dynamic-update" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="dynamic-insert" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="select-before-update" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="extends"/>
    <xs:attribute name="lazy">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="abstract" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="persister"/>
    <xs:attribute name="check"/>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <!-- default: no proxy interface -->
  <!-- default: unqualified class name -->
  <!-- default: none when toplevel, otherwise the nearest class definition -->
  <!-- default: none -->
  <!--
    Union subclasses are used for the table-per-concrete-class mapping strategy
    
    See the note on the class element regarding <pojo/> vs. @name usage...
  -->
  <xs:element name="union-subclass">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="property"/>
          <xs:element ref="many-to-one"/>
          <xs:element ref="one-to-one"/>
          <xs:element ref="component"/>
          <xs:element ref="dynamic-component"/>
          <xs:element ref="any"/>
          <xs:element ref="map"/>
          <xs:element ref="set"/>
          <xs:element ref="list"/>
          <xs:element ref="bag"/>
          <xs:element ref="idbag"/>
          <xs:element ref="array"/>
          <xs:element ref="primitive-array"/>
          <xs:element ref="query-list"/>
        </xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="union-subclass"/>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.union-subclass"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.union-subclass">
    <xs:attribute name="entity-name"/>
    <xs:attribute name="name"/>
    <xs:attribute name="proxy"/>
    <xs:attribute name="table"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="dynamic-update" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="dynamic-insert" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="select-before-update" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="extends"/>
    <xs:attribute name="lazy">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="abstract" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="persister"/>
    <xs:attribute name="check"/>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <!-- default: no proxy interface -->
  <!-- default: unqualified class name -->
  <!-- default: none when toplevel, otherwise the nearest class definition -->
  <!-- default: none -->
  <!--
    Property of an entity class or component, component-element, composite-id, etc. 
    JavaBeans style properties are mapped to table columns.
  -->
  <xs:element name="property">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="column"/>
          <xs:element ref="formula"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="type"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.property"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.property">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="node"/>
    <xs:attribute name="access"/>
    <xs:attribute name="type"/>
    <xs:attribute name="column"/>
    <xs:attribute name="length"/>
    <xs:attribute name="precision"/>
    <xs:attribute name="scale"/>
    <xs:attribute name="not-null" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="unique" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="update" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="insert" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="formula"/>
    <xs:attribute name="index"/>
    <xs:attribute name="lazy" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- only supported for properties of a class (not component) -->
  <!-- include the columns spanned by this property in an index -->
  <!--
    Declares the type of the containing property (overrides an eventually existing type
    attribute of the property). May contain param elements to customize a ParametrizableType.
  -->
  <xs:element name="type">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="param"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.type"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.type">
    <xs:attribute name="name" use="required"/>
  </xs:attributeGroup>
  <!--
    Declares an association between two entities (Or from a component, component element,
    etc. to an entity).
  -->
  <xs:element name="many-to-one">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="column"/>
          <xs:element ref="formula"/>
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.many-to-one"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.many-to-one">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="class"/>
    <xs:attribute name="entity-name"/>
    <xs:attribute name="column"/>
    <xs:attribute name="not-null" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="unique" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="cascade"/>
    <xs:attribute name="outer-join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
          <xs:enumeration value="auto"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fetch">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="update" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="insert" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="foreign-key"/>
    <xs:attribute name="property-ref"/>
    <xs:attribute name="formula"/>
    <xs:attribute name="index"/>
    <xs:attribute name="lazy" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- only supported for properties of a class (not component) -->
  <!-- include the columns spanned by this association in an index -->
  <!--
    Declares a one-to-one association between two entities (Or from a component, 
    component element, etc. to an entity).
  -->
  <xs:element name="one-to-one">
    <xs:complexType>
      <xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="formula"/>
      </xs:choice>
      <xs:attributeGroup ref="attlist.one-to-one"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.one-to-one">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="formula"/>
    <xs:attribute name="access"/>
    <xs:attribute name="class"/>
    <xs:attribute name="entity-name"/>
    <xs:attribute name="cascade"/>
    <xs:attribute name="outer-join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
          <xs:enumeration value="auto"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fetch">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="constrained" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="foreign-key"/>
    <xs:attribute name="property-ref"/>
    <xs:attribute name="lazy" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- A property embedded in a composite identifier or map index (always not-null). -->
  <xs:element name="key-property">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="column"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.key-property"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.key-property">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="type"/>
    <xs:attribute name="column"/>
    <xs:attribute name="length"/>
  </xs:attributeGroup>
  <!--
    A many-to-one association embedded in a composite identifier or map index 
    (always not-null, never cascade).
  -->
  <xs:element name="key-many-to-one">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="column"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.key-many-to-one"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.key-many-to-one">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="class"/>
    <xs:attribute name="entity-name"/>
    <xs:attribute name="column"/>
    <xs:attribute name="foreign-key"/>
  </xs:attributeGroup>
  <!--
    An "any" association is a polymorphic association to any table with
    the given identifier type. The first listed column is a VARCHAR column 
    holding the name of the class (for that row).
  -->
  <xs:element name="any">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta-value"/>
        <xs:element ref="column"/>
        <xs:element maxOccurs="unbounded" ref="column"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.any"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.any">
    <xs:attribute name="id-type" use="required"/>
    <xs:attribute name="meta-type"/>
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="insert" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="update" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="cascade"/>
    <xs:attribute name="index"/>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="lazy" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <!-- - default: Hibernate.STRING -->
  <!-- include the columns spanned by this association in an index -->
  <!-- only supported for properties of a class (not component) -->
  <xs:element name="meta-value">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.meta-value"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.meta-value">
    <xs:attribute name="value" use="required"/>
    <xs:attribute name="class" use="required"/>
  </xs:attributeGroup>
  <!--
    A component is a user-defined class, persisted along with its containing entity
    to the table of the entity class. JavaBeans style properties of the component are
    mapped to columns of the table of the containing entity. A null component reference
    is mapped to null values in all columns and vice versa. Components do not support
    shared reference semantics.
  -->
  <xs:element name="component">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="parent"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="property"/>
          <xs:element ref="many-to-one"/>
          <xs:element ref="one-to-one"/>
          <xs:element ref="component"/>
          <xs:element ref="dynamic-component"/>
          <xs:element ref="any"/>
          <xs:element ref="map"/>
          <xs:element ref="set"/>
          <xs:element ref="list"/>
          <xs:element ref="bag"/>
          <xs:element ref="array"/>
          <xs:element ref="primitive-array"/>
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.component"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.component">
    <xs:attribute name="class"/>
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="unique" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="update" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="insert" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="lazy" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <!--
    A dynamic-component maps columns of the database entity to a java.util.Map 
    at the Java level
  -->
  <xs:element name="dynamic-component">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="property"/>
        <xs:element ref="many-to-one"/>
        <xs:element ref="one-to-one"/>
        <xs:element ref="component"/>
        <xs:element ref="dynamic-component"/>
        <xs:element ref="any"/>
        <xs:element ref="map"/>
        <xs:element ref="set"/>
        <xs:element ref="list"/>
        <xs:element ref="bag"/>
        <xs:element ref="array"/>
        <xs:element ref="primitive-array"/>
      </xs:choice>
      <xs:attributeGroup ref="attlist.dynamic-component"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.dynamic-component">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="unique" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="update" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="insert" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <!--
    properties declares that the contained properties form an alternate key. The name
    attribute allows an alternate key to be used as the target of a property-ref.
  -->
  <xs:element name="properties">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="property"/>
        <xs:element ref="many-to-one"/>
        <xs:element ref="component"/>
        <xs:element ref="dynamic-component"/>
      </xs:choice>
      <xs:attributeGroup ref="attlist.properties"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.properties">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="unique" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="insert" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="update" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <!--
    The parent element maps a property of the component class as a pointer back to
    the owning entity.
  -->
  <xs:element name="parent">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.parent"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.parent">
    <xs:attribute name="name" use="required"/>
  </xs:attributeGroup>
  <!--
    Collection declarations nested inside a class declaration indicate a foreign key 
    relationship from the collection table to the enclosing class.
  -->
  <xs:element name="map">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element minOccurs="0" ref="cache"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:element ref="key"/>
        <xs:choice>
          <xs:element ref="map-key"/>
          <xs:element ref="composite-map-key"/>
          <xs:element ref="map-key-many-to-many"/>
          <xs:element ref="index"/>
          <xs:element ref="composite-index"/>
          <xs:element ref="index-many-to-many"/>
          <xs:element ref="index-many-to-any"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="element"/>
          <xs:element ref="one-to-many"/>
          <xs:element ref="many-to-many"/>
          <xs:element ref="composite-element"/>
          <xs:element ref="many-to-any"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
        <xs:element minOccurs="0" ref="sql-delete-all"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="filter"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.map"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.map">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="table"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="lazy">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="inverse" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="sort" default="unsorted"/>
    <xs:attribute name="cascade"/>
    <xs:attribute name="order-by"/>
    <xs:attribute name="where"/>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="outer-join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
          <xs:enumeration value="auto"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fetch">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
          <xs:enumeration value="subselect"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="check"/>
    <xs:attribute name="persister"/>
    <xs:attribute name="collection-type"/>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- default: name -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- unsorted|natural|"comparator class", default: unsorted -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- only supported for properties of a class (not component) -->
  <xs:element name="set">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element minOccurs="0" ref="cache"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:element ref="key"/>
        <xs:choice>
          <xs:element ref="element"/>
          <xs:element ref="one-to-many"/>
          <xs:element ref="many-to-many"/>
          <xs:element ref="composite-element"/>
          <xs:element ref="many-to-any"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
        <xs:element minOccurs="0" ref="sql-delete-all"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="filter"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.set"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.set">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="table"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="lazy">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="sort" default="unsorted"/>
    <xs:attribute name="inverse" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="cascade"/>
    <xs:attribute name="order-by"/>
    <xs:attribute name="where"/>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="outer-join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
          <xs:enumeration value="auto"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fetch">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
          <xs:enumeration value="subselect"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="persister"/>
    <xs:attribute name="collection-type"/>
    <xs:attribute name="check"/>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- default: name -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- unsorted|natural|"comparator class" -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- only supported for properties of a class (not component) -->
  <xs:element name="bag">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element minOccurs="0" ref="cache"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:element ref="key"/>
        <xs:choice>
          <xs:element ref="element"/>
          <xs:element ref="one-to-many"/>
          <xs:element ref="many-to-many"/>
          <xs:element ref="composite-element"/>
          <xs:element ref="many-to-any"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
        <xs:element minOccurs="0" ref="sql-delete-all"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="filter"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.bag"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.bag">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="table"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="lazy">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="inverse" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="cascade"/>
    <xs:attribute name="order-by"/>
    <xs:attribute name="where"/>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="outer-join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
          <xs:enumeration value="auto"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fetch">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
          <xs:enumeration value="subselect"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="persister"/>
    <xs:attribute name="collection-type"/>
    <xs:attribute name="check"/>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- default: name -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- only supported for properties of a class (not component) -->
  <xs:element name="idbag">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element minOccurs="0" ref="cache"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:element ref="collection-id"/>
        <xs:element ref="key"/>
        <xs:choice>
          <xs:element ref="element"/>
          <xs:element ref="many-to-many"/>
          <xs:element ref="composite-element"/>
          <xs:element ref="many-to-any"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
        <xs:element minOccurs="0" ref="sql-delete-all"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="filter"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.idbag"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.idbag">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="table"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="lazy">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="cascade"/>
    <xs:attribute name="order-by"/>
    <xs:attribute name="where"/>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="outer-join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
          <xs:enumeration value="auto"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fetch">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
          <xs:enumeration value="subselect"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="persister"/>
    <xs:attribute name="collection-type"/>
    <xs:attribute name="check"/>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- default: name -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- only supported for properties of a class (not component) -->
  <xs:element name="list">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element minOccurs="0" ref="cache"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:element ref="key"/>
        <xs:choice>
          <xs:element ref="index"/>
          <xs:element ref="list-index"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="element"/>
          <xs:element ref="one-to-many"/>
          <xs:element ref="many-to-many"/>
          <xs:element ref="composite-element"/>
          <xs:element ref="many-to-any"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
        <xs:element minOccurs="0" ref="sql-delete-all"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="filter"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.list"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.list">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="table"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="lazy">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="inverse" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="cascade"/>
    <xs:attribute name="where"/>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="outer-join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
          <xs:enumeration value="auto"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fetch">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
          <xs:enumeration value="subselect"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="persister"/>
    <xs:attribute name="collection-type"/>
    <xs:attribute name="check"/>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- default: name -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- only supported for properties of a class (not component) -->
  <xs:element name="array">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element minOccurs="0" ref="cache"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:element ref="key"/>
        <xs:choice>
          <xs:element ref="index"/>
          <xs:element ref="list-index"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="element"/>
          <xs:element ref="one-to-many"/>
          <xs:element ref="many-to-many"/>
          <xs:element ref="composite-element"/>
          <xs:element ref="many-to-any"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
        <xs:element minOccurs="0" ref="sql-delete-all"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.array"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.array">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="table"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="inverse" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="element-class"/>
    <xs:attribute name="cascade"/>
    <xs:attribute name="where"/>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="outer-join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
          <xs:enumeration value="auto"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fetch">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
          <xs:enumeration value="subselect"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="persister"/>
    <xs:attribute name="collection-type"/>
    <xs:attribute name="check"/>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- default: name -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- only supported for properties of a class (not component) -->
  <xs:element name="primitive-array">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="subselect"/>
        <xs:element minOccurs="0" ref="cache"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="synchronize"/>
        <xs:element ref="key"/>
        <xs:choice>
          <xs:element ref="index"/>
          <xs:element ref="list-index"/>
        </xs:choice>
        <xs:element ref="element"/>
        <xs:element minOccurs="0" ref="loader"/>
        <xs:element minOccurs="0" ref="sql-insert"/>
        <xs:element minOccurs="0" ref="sql-update"/>
        <xs:element minOccurs="0" ref="sql-delete"/>
        <xs:element minOccurs="0" ref="sql-delete-all"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.primitive-array"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.primitive-array">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="table"/>
    <xs:attribute name="schema"/>
    <xs:attribute name="catalog"/>
    <xs:attribute name="subselect"/>
    <xs:attribute name="where"/>
    <xs:attribute name="batch-size"/>
    <xs:attribute name="outer-join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
          <xs:enumeration value="auto"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fetch">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
          <xs:enumeration value="subselect"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="persister"/>
    <xs:attribute name="collection-type"/>
    <xs:attribute name="check"/>
    <xs:attribute name="optimistic-lock" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- default: name -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- default: none -->
  <!-- only supported for properties of a class (not component) -->
  <!-- Declares the element type of a collection of basic type -->
  <xs:element name="element">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="column"/>
        <xs:element ref="formula"/>
      </xs:choice>
      <xs:attributeGroup ref="attlist.element"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.element">
    <xs:attribute name="column"/>
    <xs:attribute name="node"/>
    <xs:attribute name="formula"/>
    <xs:attribute name="type" use="required"/>
    <xs:attribute name="length"/>
    <xs:attribute name="precision"/>
    <xs:attribute name="scale"/>
    <xs:attribute name="not-null" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="unique" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!--
    One to many association. This tag declares the entity-class
    element type of a collection and specifies a one-to-many relational model
  -->
  <xs:element name="one-to-many">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.one-to-many"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.one-to-many">
    <xs:attribute name="class"/>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="entity-name"/>
  </xs:attributeGroup>
  <!--
     No column declaration attributes required in this case. The primary
    key column of the associated class is already mapped elsewhere.
  -->
  <!--
    Many to many association. This tag declares the entity-class
    element type of a collection and specifies a many-to-many relational model
  -->
  <xs:element name="many-to-many">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="column"/>
          <xs:element ref="formula"/>
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.many-to-many"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.many-to-many">
    <xs:attribute name="class"/>
    <xs:attribute name="node"/>
    <xs:attribute name="embed-xml" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="entity-name"/>
    <xs:attribute name="column"/>
    <xs:attribute name="formula"/>
    <xs:attribute name="outer-join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
          <xs:enumeration value="auto"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fetch" default="join">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="join"/>
          <xs:enumeration value="select"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="foreign-key"/>
    <xs:attribute name="unique" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!--
    A composite element allows a collection to hold instances of an arbitrary 
    class, without the requirement of joining to an entity table. Composite elements
    have component semantics - no shared references and ad hoc null value semantics. 
    Composite elements may not hold nested collections.
  -->
  <xs:element name="composite-element">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" ref="parent"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="property"/>
          <xs:element ref="many-to-one"/>
          <xs:element ref="any"/>
          <xs:element ref="nested-composite-element"/>
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.composite-element"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.composite-element">
    <xs:attribute name="class" use="required"/>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <xs:element name="nested-composite-element">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="parent"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="property"/>
          <xs:element ref="many-to-one"/>
          <xs:element ref="any"/>
          <xs:element ref="nested-composite-element"/>
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.nested-composite-element"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.nested-composite-element">
    <xs:attribute name="class" use="required"/>
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="access"/>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <!-- Declares the column name of a foreign key. -->
  <xs:element name="key">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="column"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.key"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.key">
    <xs:attribute name="column"/>
    <xs:attribute name="property-ref"/>
    <xs:attribute name="foreign-key"/>
    <xs:attribute name="on-delete" default="noaction">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="cascade"/>
          <xs:enumeration value="noaction"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="not-null">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="update">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="unique">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!--
    Declares the type and column mapping for a collection index (array or
    list index, or key of a map).
  -->
  <xs:element name="list-index">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="column"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.list-index"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.list-index">
    <xs:attribute name="column"/>
    <xs:attribute name="base" default="0"/>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <xs:element name="map-key">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="column"/>
        <xs:element ref="formula"/>
      </xs:choice>
      <xs:attributeGroup ref="attlist.map-key"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.map-key">
    <xs:attribute name="column"/>
    <xs:attribute name="formula"/>
    <xs:attribute name="type" use="required"/>
    <xs:attribute name="length"/>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <xs:element name="index">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="column"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.index"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.index">
    <xs:attribute name="column"/>
    <xs:attribute name="type"/>
    <xs:attribute name="length"/>
    <xs:attribute name="node"/>
  </xs:attributeGroup>
  <!-- required for maps -->
  <!--
    Many to many association mapped to the key of a map. ie. a map keyed
    on entities.
  -->
  <xs:element name="map-key-many-to-many">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="column"/>
        <xs:element ref="formula"/>
      </xs:choice>
      <xs:attributeGroup ref="attlist.map-key-many-to-many"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.map-key-many-to-many">
    <xs:attribute name="class"/>
    <xs:attribute name="entity-name"/>
    <xs:attribute name="column"/>
    <xs:attribute name="formula"/>
    <xs:attribute name="foreign-key"/>
  </xs:attributeGroup>
  <xs:element name="index-many-to-many">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="column"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.index-many-to-many"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.index-many-to-many">
    <xs:attribute name="class" use="required"/>
    <xs:attribute name="entity-name"/>
    <xs:attribute name="column"/>
    <xs:attribute name="foreign-key"/>
  </xs:attributeGroup>
  <!-- Composite index of a map ie. a map keyed on components. -->
  <xs:element name="composite-map-key">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element ref="key-property"/>
        <xs:element ref="key-many-to-one"/>
      </xs:choice>
      <xs:attributeGroup ref="attlist.composite-map-key"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.composite-map-key">
    <xs:attribute name="class" use="required"/>
  </xs:attributeGroup>
  <xs:element name="composite-index">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element ref="key-property"/>
        <xs:element ref="key-many-to-one"/>
      </xs:choice>
      <xs:attributeGroup ref="attlist.composite-index"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.composite-index">
    <xs:attribute name="class" use="required"/>
  </xs:attributeGroup>
  <!--
    A "many to any" defines a polymorphic association to any table 
    with the given identifier type. The first listed column is a VARCHAR column 
    holding the name of the class (for that row).
  -->
  <xs:element name="many-to-any">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta-value"/>
        <xs:element ref="column"/>
        <xs:element maxOccurs="unbounded" ref="column"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.many-to-any"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.many-to-any">
    <xs:attribute name="id-type" use="required"/>
    <xs:attribute name="meta-type"/>
  </xs:attributeGroup>
  <!-- - default: Hibernate.CLASS -->
  <xs:element name="index-many-to-any">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="column"/>
        <xs:element maxOccurs="unbounded" ref="column"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.index-many-to-any"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.index-many-to-any">
    <xs:attribute name="id-type" use="required"/>
    <xs:attribute name="meta-type"/>
  </xs:attributeGroup>
  <!-- - default: Hibernate.CLASS -->
  <xs:element name="collection-id">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="column"/>
        <xs:element ref="generator"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.collection-id"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.collection-id">
    <xs:attribute name="column" use="required"/>
    <xs:attribute name="type" use="required"/>
    <xs:attribute name="length"/>
  </xs:attributeGroup>
  <!--
    Generators generate unique identifiers. The class attribute specifies a Java 
    class implementing an id generation algorithm.
  -->
  <xs:element name="generator">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="param"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.generator"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.generator">
    <xs:attribute name="class" use="required"/>
  </xs:attributeGroup>
  <xs:element name="param">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.param"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.param">
    <xs:attribute name="name" use="required"/>
  </xs:attributeGroup>
  <!--
    The column element is an alternative to column attributes and required for 
    mapping associations to classes with composite ids.
  -->
  <xs:element name="column">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.column"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.column">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="length"/>
    <xs:attribute name="precision"/>
    <xs:attribute name="scale"/>
    <xs:attribute name="not-null">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="unique">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="unique-key"/>
    <xs:attribute name="sql-type"/>
    <xs:attribute name="index"/>
    <xs:attribute name="check"/>
  </xs:attributeGroup>
  <!-- default: 255 -->
  <!-- default: false (except for id properties) -->
  <!-- default: false (except for id properties) -->
  <!-- default: no unique key -->
  <!-- override default column type for hibernate type -->
  <!-- default: none -->
  <!--
    The formula and subselect elements allow us to map derived properties and 
    entities.
  -->
  <xs:element name="formula" type="xs:string"/>
  <xs:element name="subselect" type="xs:string"/>
  <!-- The cache element enables caching of an entity class. -->
  <xs:element name="cache">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.cache"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.cache">
    <xs:attribute name="usage" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="read-only"/>
          <xs:enumeration value="read-write"/>
          <xs:enumeration value="nonstrict-read-write"/>
          <xs:enumeration value="transactional"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="region"/>
  </xs:attributeGroup>
  <!-- default: class or collection role name -->
  <!--
    A mapped query-list allows a named query to be attached to
    a property of the domain model
  -->
  <xs:element name="query-list">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.query-list"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.query-list">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="query-ref" use="required"/>
  </xs:attributeGroup>
  <xs:element name="loader">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.loader"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.loader">
    <xs:attribute name="query-ref" use="required"/>
  </xs:attributeGroup>
  <!-- The query element declares a named Hibernate query string -->
  <xs:element name="query">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="representation"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.query"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.query">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="flush-mode">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="auto"/>
          <xs:enumeration value="never"/>
          <xs:enumeration value="always"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="cacheable" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="cache-region"/>
    <xs:attribute name="fetch-size"/>
    <xs:attribute name="timeout"/>
  </xs:attributeGroup>
  <xs:element name="representation">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.representation"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.representation">
    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="pojo"/>
          <xs:enumeration value="dom4j"/>
          <xs:enumeration value="dynamic-map"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- The sql-query element declares a named SQL query string -->
  <xs:element name="sql-query">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="return-scalar"/>
        <xs:element ref="return"/>
        <xs:element ref="return-join"/>
        <xs:element ref="load-collection"/>
        <xs:element ref="synchronize"/>
      </xs:choice>
      <xs:attributeGroup ref="attlist.sql-query"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.sql-query">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="flush-mode">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="auto"/>
          <xs:enumeration value="never"/>
          <xs:enumeration value="always"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="cacheable" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="cache-region"/>
    <xs:attribute name="fetch-size"/>
    <xs:attribute name="timeout"/>
    <xs:attribute name="callable" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!--
    Defines a return component for a sql-query.  Alias refers to the alias
    used in the actual sql query; lock-mode specifies the locking to be applied
    when the query is executed.  The class, collection, and role attributes are mutually exclusive;
    class refers to the class name of a "root entity" in the object result; collection refers
    to a collection of a given class and is used to define custom sql to load that owned collection
    and takes the form "ClassName.propertyName"; role refers to the property path for an eager fetch
    and takes the form "owningAlias.propertyName"
  -->
  <xs:element name="return">
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element minOccurs="0" ref="return-discriminator"/>
        <xs:element ref="return-property"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.return"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.return">
    <xs:attribute name="alias" use="required"/>
    <xs:attribute name="entity-name"/>
    <xs:attribute name="class"/>
    <xs:attribute name="lock-mode" default="read">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="none"/>
          <xs:enumeration value="read"/>
          <xs:enumeration value="upgrade"/>
          <xs:enumeration value="upgrade-nowait"/>
          <xs:enumeration value="write"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="return-property">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="return-column"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.return-property"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.return-property">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="column"/>
  </xs:attributeGroup>
  <xs:element name="return-column">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.return-column"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.return-column">
    <xs:attribute name="name" use="required"/>
  </xs:attributeGroup>
  <xs:element name="return-discriminator">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.return-discriminator"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.return-discriminator">
    <xs:attribute name="column" use="required"/>
  </xs:attributeGroup>
  <xs:element name="return-join">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.return-join"/>
    </xs:complexType>
  </xs:element>
  <!-- TODO: (return-property)* -->
  <xs:attributeGroup name="attlist.return-join">
    <xs:attribute name="alias" use="required"/>
    <xs:attribute name="property" use="required"/>
    <xs:attribute name="lock-mode" default="read">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="none"/>
          <xs:enumeration value="read"/>
          <xs:enumeration value="upgrade"/>
          <xs:enumeration value="upgrade-nowait"/>
          <xs:enumeration value="write"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="load-collection">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.load-collection"/>
    </xs:complexType>
  </xs:element>
  <!-- TODO: (return-property)* -->
  <xs:attributeGroup name="attlist.load-collection">
    <xs:attribute name="alias" use="required"/>
    <xs:attribute name="role" use="required"/>
    <xs:attribute name="lock-mode" default="read">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="none"/>
          <xs:enumeration value="read"/>
          <xs:enumeration value="upgrade"/>
          <xs:enumeration value="upgrade-nowait"/>
          <xs:enumeration value="write"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="return-scalar">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.return-scalar"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.return-scalar">
    <xs:attribute name="column" use="required"/>
    <xs:attribute name="type" use="required"/>
  </xs:attributeGroup>
  <xs:element name="synchronize">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.synchronize"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.synchronize">
    <xs:attribute name="table" use="required"/>
  </xs:attributeGroup>
  <!-- custom sql operations -->
  <xs:element name="sql-insert">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.sql-insert"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.sql-insert">
    <xs:attribute name="callable" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="sql-update">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.sql-update"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.sql-update">
    <xs:attribute name="callable" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="sql-delete">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.sql-delete"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.sql-delete">
    <xs:attribute name="callable" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="sql-delete-all">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.sql-delete-all"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.sql-delete-all">
    <xs:attribute name="callable" default="false">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
</xs:schema>
